@model F1nanceC0ntrol.ViewModels.ProfitCostAnalysisViewModel
@{
    ViewData["Title"] = "Análise de Lucro e Custo ao Longo do Tempo";
}

<h1>Análise de Lucro e Custo ao Longo do Tempo</h1>

<div class="row mt-4">
    <div class="col-md-3">
        <div class="card">
            <div class="card-header">
                <h5>Filtros</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label for="startDate" class="form-label">Data Inicial</label>
                    <input type="date" class="form-control" id="startDate" name="startDate" value="@Model.StartDate.ToString("yyyy-MM-dd")">
                </div>
                <div class="mb-3">
                    <label for="endDate" class="form-label">Data Final</label>
                    <input type="date" class="form-control" id="endDate" name="endDate" value="@Model.EndDate.ToString("yyyy-MM-dd")">
                </div>
                <div class="mb-3">
                    <label class="form-label">Agrupar por</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="aggregationType" id="aggregationMonth" value="Month" @(Model.AggregationType == "Month" ? "checked" : "")>
                        <label class="form-check-label" for="aggregationMonth">
                            Mês
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="aggregationType" id="aggregationYear" value="Year" @(Model.AggregationType == "Year" ? "checked" : "")>
                        <label class="form-check-label" for="aggregationYear">
                            Ano
                        </label>
                    </div>
                </div>
                <button type="button" id="filterButton" class="btn btn-primary">Filtrar</button>
            </div>
        </div>
    </div>
    <div class="col-md-9">
        <div class="card">
            <div class="card-header">
                <h5>Lucro e Custo ao Longo do Tempo</h5>
            </div>
            <div class="card-body">
                <div style="height: 400px;">
                    <canvas id="profitCostChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Index" class="btn btn-secondary">Voltar</a>
</div>

@section Scripts {
    <!-- Adicionar referência ao Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        let profitCostChart;

        document.addEventListener('DOMContentLoaded', function() {
            const ctx = document.getElementById('profitCostChart').getContext('2d');

            // Inicializar o gráfico vazio
            profitCostChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: [],
                    datasets: []
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            stacked: false
                        },
                        y: {
                            stacked: false
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.parsed.y !== null) {
                                        label += new Intl.NumberFormat('pt-BR', {
                                            style: 'currency',
                                            currency: 'BRL'
                                        }).format(context.parsed.y);
                                    }
                                    return label;
                                }
                            }
                        }
                    }
                }
            });

            // Gerar o gráfico inicial
            generateChart();

            // Adicionar listener para o botão de filtrar
            document.getElementById('filterButton').addEventListener('click', generateChart);
        });

        async function generateChart() {
            const startDateStr = document.getElementById('startDate').value;
            const endDateStr = document.getElementById('endDate').value;
            const aggregationType = document.querySelector('input[name="aggregationType"]:checked').value;

            // Verificar se as strings de data são válidas
            if (!startDateStr || !endDateStr) {
                alert('Por favor, selecione datas válidas.');
                return;
            }

            try {
                const response = await fetch('/Analysis/GetProfitCostData', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        startDate: startDateStr,
                        endDate: endDateStr,
                        aggregationType: aggregationType
                    })
                });

                if (!response.ok) {
                    throw new Error(`Erro na requisição: ${response.status}`);
                }

                const data = await response.json();

                // Atualizar o gráfico
                profitCostChart.data.labels = data.labels;
                profitCostChart.data.datasets = data.datasets;
                profitCostChart.update();
            } catch (error) {
                console.error('Erro:', error);
                alert('Ocorreu um erro ao gerar o gráfico. Por favor, tente novamente.');
            }
        }
    </script>
}